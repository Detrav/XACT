buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
	
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

idea.module.inheritOutputDirs = true


ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

version = "${config.mc_version}-${config.version}"
group= "xk.xact" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = config.mod_name

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "eclipse"
}

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
}

repositories {
    maven {
        name 'Forge'
        url 'http://files.minecraftforge.net/maven'
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
}

dependencies {
    provided ("appeng:appliedenergistics2:${config.ae2.version}:dev") {
        exclude module: '*'
    }
    provided "codechicken:CodeChickenLib:${config.mc_version}-${config.codechickenlib.version}:dev"
    provided "codechicken:CodeChickenCore:${config.mc_version}-${config.codechickencore.version}:dev"
    provided "codechicken:NotEnoughItems:${config.mc_version}-${config.nei.version}:dev"

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    //compile "appeng:appliedenergistics2:rv2-beta-33:dev"
    //compile "codechicken:CodeChickenLib:1.7.10-1.1.1.105:dev"
    //compile "codechicken:CodeChickenCore:1.7.10-1.0.2.29:dev"
    //compile "codechicken:NotEnoughItems:1.7.10-1.0.2.64:dev"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}
